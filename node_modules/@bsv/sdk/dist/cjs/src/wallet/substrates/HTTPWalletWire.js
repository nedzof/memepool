"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const WalletWireCalls_js_1 = __importDefault(require("./WalletWireCalls.js"));
const index_js_1 = require("../../primitives/index.js");
class HTTPWalletWire {
    constructor(originator, baseUrl = 'http://localhost:3301', httpClient = fetch) {
        this.baseUrl = baseUrl;
        this.httpClient = httpClient;
        this.originator = originator;
    }
    async transmitToWallet(message) {
        const messageReader = new index_js_1.Utils.Reader(message);
        // Read call code
        const callCode = messageReader.readUInt8();
        // Map call code to call name
        const callName = WalletWireCalls_js_1.default[callCode]; // calls is enum
        if (!callName) {
            // Invalid call code
            throw new Error(`Invalid call code: ${callCode}`);
        }
        // Read originator length
        const originatorLength = messageReader.readUInt8();
        let originator;
        if (originatorLength > 0) {
            const originatorBytes = messageReader.read(originatorLength);
            originator = index_js_1.Utils.toUTF8(originatorBytes);
        }
        const payload = messageReader.read();
        const response = await fetch(`${this.baseUrl}/${callName}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/octet-stream',
                Origin: originator
            },
            body: new Uint8Array(payload)
        });
        const responseBuffer = await response.arrayBuffer();
        return Array.from(new Uint8Array(responseBuffer));
    }
}
exports.default = HTTPWalletWire;
//# sourceMappingURL=HTTPWalletWire.js.map